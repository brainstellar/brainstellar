{"version":3,"file":"component---src-templates-puzzle-js-c102ad0face5f34fb0a9.js","mappings":"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","sources":["webpack://brainstellar/./src/components/Button.js","webpack://brainstellar/./src/components/FacebookComments.js","webpack://brainstellar/./src/templates/puzzle.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\n\nconst Button = ({ id, label, content, backgroundColor, onToggle, passClass }) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleContent = () => {\n    setIsHidden(!isHidden);\n    onToggle && onToggle(); // Call the onToggle prop if it exists\n  };\n\n  return (\n    <>\n      <div>\n        <button style={{ display: `inline-block` }} id={`${id}Button`} className={`push ${isHidden ? '' : 'pushed'}`} onClick={toggleContent}>{label}</button>\n        <span id={id} className={isHidden ? 'hidden' : `unhidden ${passClass}`}>\n          <div className=\"around\" style={{ backgroundColor: backgroundColor }}>\n            {content}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\n\nconst FacebookComments = ({ puzzleId }) => {\n  const [loadComments, setLoadComments] = useState(false);\n\n  useEffect(() => {\n    if (loadComments) {\n      if (window.FB) {\n        window.FB.XFBML.parse(); // Reload the comments plugin\n      } else {\n        window.fbAsyncInit = function () {\n          window.FB.init({\n            appId: '685807501512723',\n            cookie: true,\n            xfbml: true,\n            version: 'v12.0'\n          });\n        };\n        (function (d, s, id) {\n          var js, fjs = d.getElementsByTagName(s)[0];\n          if (d.getElementById(id)) { return; }\n          js = d.createElement(s); js.id = id;\n          js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n          fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n      }\n    }\n  }, [loadComments]);\n\n  if (!loadComments) {\n    return (\n      <Button\n        id={`comments${puzzleId}`}\n        label=\"Comments\"\n        onToggle={() => setLoadComments(true)}\n        backgroundColor={`white`}\n      />\n    );\n  }\n\n  const URL = `http://brainstellar.com/puzzles/${puzzleId}`\n  return (\n\n    <Button\n      id={`comments${puzzleId}`}\n      label=\"Comments\"\n      content={\n        <>\n          <div className=\"fb-like\" data-href={URL} data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-show-faces=\"true\" data-share=\"false\"></div>\n          <div className=\"fb-save\"\n            data-uri={URL}\n            data-size=\"small\">\n          </div>\n          <div>\n            <div className=\"fb-comments\" data-href={URL} data-width=\"\" data-numposts=\"5\"></div>\n          </div>\n        </>\n      }\n      onToggle={null}\n      backgroundColor={`white`}\n    />\n  );\n}\n\nexport default FacebookComments;\n","import React, { useEffect, useState } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Helmet } from \"react-helmet\";\nimport Button from '../components/Button';\nimport FacebookComments from '../components/FacebookComments';\n\n\nimport 'katex/dist/katex.min.css'; // important: this styles the math output\n\n\nexport const query = graphql`\n  query($puzzleId: Int!) {\n    markdownRemark(frontmatter: { puzzleId: { eq: $puzzleId } }) {\n      html\n      frontmatter {\n        puzzleId\n        difficulty\n        category\n        title\n      }\n    }\n  }\n`\n\nconst splitContent = (htmlContent) => {\n  const parts = htmlContent.split(/<h2>(.*?)<\\/h2>/);\n  let question, hint, answer, solution;\n\n  for (let i = 1; i < parts.length; i += 2) {\n    const section = parts[i];\n    const content = parts[i + 1];\n\n    if (section === 'Question') question = content;\n    else if (section === 'Hint') hint = content;\n    else if (section === 'Answer') answer = content;\n    else if (section === 'Solution') solution = content;\n  }\n\n  if (question && question.trim() === '') { question = undefined };\n  if (hint && hint.trim() === '') { hint = undefined };\n  if (answer && answer.trim() === '') { answer = undefined };\n  if (solution && solution.trim() === '') { solution = undefined };\n\n  // console.log({ question, hint, answer, solution });\n  return { question, hint, answer, solution };\n}\n\n\n\n\nexport default function Puzzle({ data, pageContext }) {\n  // const puzzleNode = data.allMarkdownRemark.edges[0].node;  // The first node matched by the query\n\n  // const puzzle = data.allMarkdownRemark.edges[0].node.frontmatter\n  // const rawMarkdown = data.allMarkdownRemark.edges[0].node.body;\n  // const html = puzzleNode.html; // HTML content\n  // const puzzle = puzzleNode.frontmatter; // Metadata\n  const puzzle = data.markdownRemark.frontmatter\n  const rawMarkdownBody = data.markdownRemark.html\n\n  const { question, hint, answer, solution } = splitContent(rawMarkdownBody);\n\n\n  const { previousPuzzleRoute, nextPuzzleRoute, category, difficulty } = pageContext\n\n  useEffect(() => {\n    document.querySelectorAll('.push').forEach(button => {\n      button.addEventListener('click', function () {\n        const content = document.getElementById(this.id.replace('Button', ''))\n        if (content) {\n          const isHidden = content.classList.contains('hidden')\n          content.classList.toggle('hidden', !isHidden)\n          content.classList.toggle('unhidden', isHidden)\n          this.classList.toggle('pushed', isHidden)\n          this.classList.toggle('push', !isHidden)\n        }\n      })\n    })\n\n  }, [])\n\n\n\n\n  return (\n    <Layout>\n      <Helmet>\n        <link rel=\"icon\" href=\"/favicon.gif\" />\n        <title>{puzzle.title} | Brainstellar Puzzles</title>\n      </Helmet>\n      <div className=\"stylishpage\"><div className=\"bord1\"><div className=\"bord2\"><div className=\"container\">\n        {category && <h2 style={{ textAlign: `center`, marginTop: `1.5em`, marginBottom: `1em` }}>{category} puzzles</h2>}\n\n        {difficulty && <h2 style={{ textAlign: `center`, marginTop: `1.5em`, marginBottom: `1em` }}>{difficulty} puzzles</h2>}\n\n\n        <br /><br />\n\n        <table style={{ border: '0px solid black', width: '100%', padding: '0px', margin: '0px' }}>\n          <tbody>\n            <tr style={{ padding: '0px', margin: '0px' }}>\n              <td style={{ padding: '0px', margin: '0px', border: '0px solid black', width: '20%', text: '' }}>\n                <Link className={`btn  btn-sm btn-${puzzle.difficulty} smooth`} to={`/puzzles/${puzzle.difficulty}`} title={`More ${puzzle.difficulty} puzzles`}>{puzzle.difficulty}</Link>\n              </td>\n              <td style={{ padding: '0px', margin: '0px' }}>\n                <div className=\"content-text\" style={{ padding: '0px', margin: '0px', textAlign: 'center', fontSize: '1.3em' }}>\n                  <a href={`/puzzles/${puzzle.puzzleId}`} title=\"Permanent link to this post\">\n                    {puzzle.title}\n                  </a>\n                </div>\n              </td>\n              <td style={{ padding: '0px', margin: '0px', border: '0px solid black', width: '20%', maxWidth: '80px', textAlign: 'right' }}>\n                <Link className={`btn  btn-sm link-white smooth`} to={`/puzzles/${puzzle.category}`} title={`More ${puzzle.category} puzzles`}>{puzzle.category}</Link>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        {/* <MDXRenderer>{puzzleNode.body}</MDXRenderer> */}\n        {/* <div dangerouslySetInnerHTML={{ __html: rawMarkdownBody }} /> */}\n\n        {question && <div className=\"content-text\" style={{ marginTop: `1em`, marginBottom: `1em` }}>\n          {/* <ComponentToDisplayMarkdown markdown={rawMarkdownBody} /> */}\n          <div dangerouslySetInnerHTML={{ __html: question }} />\n        </div>}\n\n        {puzzle.questionImage && <img src={`/puzzle-images/${puzzle.questionImage}`} style={{ width: `200px`, height: 'auto', display: 'block', 'marginLeft': 'auto', 'marginRight': 'auto' }} alt={`QuestionImage ${puzzle.puzzleId}`} />}\n\n        {hint &&\n          <Button id={`hint${puzzle.puzzleId}`} label=\"Hint\" content={\n            <div dangerouslySetInnerHTML={{ __html: hint }} />\n          }\n            passClass=\"one-liner\"\n          />\n        }\n\n        {answer &&\n          <Button id={`answer${puzzle.puzzleId}`} label=\"Answer\" content={\n            <div passClass=\"one-liner\" dangerouslySetInnerHTML={{ __html: answer }} />\n          }\n            passClass=\"one-liner\"\n          />\n        }\n\n        {solution &&\n          <Button id={`solution${puzzle.puzzleId}`} label=\"Solution\" content={\n            <>\n              {/* <ComponentToDisplayMarkdown markdown={puzzle.solution} />\n              {puzzle.solutionImage &&\n                <img src={`/puzzle-images/${puzzle.solutionImage}`} style={{ width: `200px`, height: 'auto', display: 'block', 'marginLeft': 'auto', 'marginRight': 'auto' }} alt={`SolutionImage ${puzzle.puzzleId}`} />\n              } */}\n              <div dangerouslySetInnerHTML={{ __html: solution }} />\n            </>\n          } />\n        }\n\n        <FacebookComments puzzleId={puzzle.puzzleId} />\n\n\n        <br />\n        <div style={{ marginBottom: `50px` }}>\n          <table style={{ width: `100%`, tableLayout: `fixed` }}>\n            <tbody>\n              <tr>\n                <td>\n\n                  {/* TODO: fix this margin */}\n                  {previousPuzzleRoute && (\n                    <Link style={{ float: `left` }} to={previousPuzzleRoute} className={\"btn  btn-sm link-white smooth\"}>Previous</Link>\n                  )}\n                </td>\n\n                {/* like button here */}\n                <td>\n\n                  {nextPuzzleRoute && (\n                    <Link style={{ float: `right` }} to={nextPuzzleRoute} className={\"btn  btn-sm link-white smooth\"}>Next Puzzle</Link>\n                  )}\n                </td>\n\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <br /><br />\n      </div></div></div></div>\n    </Layout>\n  )\n}\n"],"names":["id","label","content","backgroundColor","onToggle","passClass","isHidden","setIsHidden","useState","style","display","className","onClick","puzzleId","loadComments","setLoadComments","useEffect","d","s","js","fjs","window","FB","XFBML","parse","fbAsyncInit","init","appId","cookie","xfbml","version","document","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","URL","Puzzle","data","pageContext","puzzle","markdownRemark","frontmatter","rawMarkdownBody","html","question","hint","answer","solution","htmlContent","parts","split","i","length","section","trim","undefined","splitContent","previousPuzzleRoute","nextPuzzleRoute","category","difficulty","querySelectorAll","forEach","button","addEventListener","this","replace","classList","contains","toggle","Helmet","rel","href","title","textAlign","marginTop","marginBottom","border","width","padding","margin","text","Link","to","fontSize","maxWidth","dangerouslySetInnerHTML","__html","questionImage","height","alt","tableLayout","float"],"sourceRoot":""}