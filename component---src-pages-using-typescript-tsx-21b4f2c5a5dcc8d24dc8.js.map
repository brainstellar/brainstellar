{"version":3,"file":"component---src-pages-using-typescript-tsx-21b4f2c5a5dcc8d24dc8.js","mappings":"uMAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAA,IAAC,KACvDC,EAAI,SACJC,GACDF,EAAA,OACCH,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAA,UAAI,mBACcA,EAAAA,cAAA,SAAG,0BAErBA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,YAAe,0CAClCA,EAAAA,cAAA,YAAM,YAAe,qCACzCA,EAAAA,cAAA,YAAM,oBAAuB,MAEvCA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,cAAiB,oBACxDA,EAAAA,cAAA,YAAM,cAAiB,gBAAaA,EAAAA,cAAA,YAAM,YAAe,UAEnEA,EAAAA,cAAA,SAAG,gCAC4BA,EAAAA,cAAA,YAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCOX,IAvCA,SAAYT,GAAsC,IAADU,EAAAC,EAAA,IAApC,YAAEC,EAAW,MAAEb,EAAK,IAAEc,EAAG,MAAEC,GAAOd,EAC7C,MAAM,KAAEK,EAAI,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,cAkBhCC,EAAkBL,GAAeP,EAAKa,aAAaN,YACnDO,EAAgC,QAApBT,EAAGL,EAAKa,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBX,MAClCqB,EAAQ,GAAMf,EAAKa,aAAaG,SAAUP,GAASC,EAAKO,WAE9D,OACEzB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQsB,EAAkBpB,EAAK,MAAMoB,EAAiBpB,GACtDF,EAAAA,cAAA,QAAM0B,KAAK,cAAcC,QAASP,IAClCpB,EAAAA,cAAA,QAAM4B,SAAS,WAAWD,QAASzB,IACnCF,EAAAA,cAAA,QAAM4B,SAAS,iBAAiBD,QAASP,IACzCpB,EAAAA,cAAA,QAAM4B,SAAS,UAAUD,QAAQ,YACjC3B,EAAAA,cAAA,QAAM4B,SAAS,WAAWD,QAASJ,IACnCvB,EAAAA,cAAA,QAAM0B,KAAK,eAAeC,QAAQ,YAClC3B,EAAAA,cAAA,QAAM0B,KAAK,kBAAkBC,SAA0B,QAAjBb,EAAAN,EAAKa,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBe,SAAM,KAC/D7B,EAAAA,cAAA,QAAM0B,KAAK,gBAAgBC,QAASzB,IACpCF,EAAAA,cAAA,QAAM0B,KAAK,sBAAsBC,QAASP,IAGhD,C","sources":["webpack://brainstellar/./src/pages/using-typescript.tsx","webpack://brainstellar/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, url, image }) {\n  const { site, file } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n        file(relativePath: { eq: \"logo.png\" }) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const imageUrl = `${site.siteMetadata.siteUrl}${image || file.publicURL}`\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={imageUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","_site$siteMetadata","_site$siteMetadata2","description","url","image","file","useStaticQuery","metaDescription","siteMetadata","defaultTitle","imageUrl","siteUrl","publicURL","name","content","property","author"],"sourceRoot":""}