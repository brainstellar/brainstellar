{"version":3,"file":"component---src-templates-puzzle-js-d256d1c31da2a4c23e0c.js","mappings":"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","sources":["webpack://brainstellar/./src/components/Button.js","webpack://brainstellar/./src/components/FacebookComments.js","webpack://brainstellar/./src/templates/puzzle.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\n\nconst Button = ({ id, label, content, backgroundColor, onToggle, passClass }) => {\n  const [isHidden, setIsHidden] = useState(true);\n\n  const toggleContent = () => {\n    setIsHidden(!isHidden);\n    onToggle && onToggle(); // Call the onToggle prop if it exists\n  };\n\n  return (\n    <>\n      <div>\n        <button style={{ display: `inline-block` }} id={`${id}Button`} className={`push ${isHidden ? '' : 'pushed'}`} onClick={toggleContent}>{label}</button>\n        <span id={id} className={isHidden ? 'hidden' : `unhidden ${passClass}`}>\n          <div className=\"around\" style={{ backgroundColor: backgroundColor }}>\n            {content}\n          </div>\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\n\nconst FacebookComments = ({ puzzleId }) => {\n  const [loadComments, setLoadComments] = useState(false);\n\n  useEffect(() => {\n    if (loadComments) {\n      if (window.FB) {\n        window.FB.XFBML.parse(); // Reload the comments plugin\n      } else {\n        window.fbAsyncInit = function () {\n          window.FB.init({\n            appId: '685807501512723',\n            cookie: true,\n            xfbml: true,\n            version: 'v12.0'\n          });\n        };\n        (function (d, s, id) {\n          var js, fjs = d.getElementsByTagName(s)[0];\n          if (d.getElementById(id)) { return; }\n          js = d.createElement(s); js.id = id;\n          js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n          fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n      }\n    }\n  }, [loadComments]);\n\n  if (!loadComments) {\n    return (\n      <Button\n        id={`comments${puzzleId}`}\n        label=\"Comments\"\n        onToggle={() => setLoadComments(true)}\n        backgroundColor={`white`}\n      />\n    );\n  }\n\n  const URL = `http://brainstellar.com/puzzles/${puzzleId}`\n  return (\n\n    <Button\n      id={`comments${puzzleId}`}\n      label=\"Comments\"\n      content={\n        <>\n          <div className=\"fb-like\" data-href={URL} data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-show-faces=\"true\" data-share=\"false\"></div>\n          <div className=\"fb-save\"\n            data-uri={URL}\n            data-size=\"small\">\n          </div>\n          <div>\n            <div className=\"fb-comments\" data-href={URL} data-width=\"\" data-numposts=\"5\"></div>\n          </div>\n        </>\n      }\n      onToggle={null}\n      backgroundColor={`white`}\n    />\n  );\n}\n\nexport default FacebookComments;\n","import React, { useEffect, useState } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Helmet } from \"react-helmet\";\nimport Button from '../components/Button';\nimport FacebookComments from '../components/FacebookComments';\n\n\nimport 'katex/dist/katex.min.css'; // important: this styles the math output\n\n\nexport const query = graphql`\n  query($puzzleId: Int!) {\n    markdownRemark(frontmatter: { puzzleId: { eq: $puzzleId } }) {\n      html\n      frontmatter {\n        puzzleId\n        difficulty\n        category\n        title\n      }\n    }\n  }\n`\n\nconst splitContent = (htmlContent) => {\n  const parts = htmlContent.split(/<h2>(.*?)<\\/h2>/);\n  let question, hint, answer, solution;\n\n  for (let i = 1; i < parts.length; i += 2) {\n    const section = parts[i];\n    const content = parts[i + 1];\n\n    if (section === 'Question') question = content;\n    else if (section === 'Hint') hint = content;\n    else if (section === 'Answer') answer = content;\n    else if (section === 'Solution') solution = content;\n  }\n\n  if (question && question.trim() === '') { question = undefined };\n  if (hint && hint.trim() === '') { hint = undefined };\n  if (answer && answer.trim() === '') { answer = undefined };\n  if (solution && solution.trim() === '') { solution = undefined };\n\n  // console.log({ question, hint, answer, solution });\n  return { question, hint, answer, solution };\n}\n\n\n\n\nexport default function Puzzle({ data, pageContext }) {\n  // const puzzleNode = data.allMarkdownRemark.edges[0].node;  // The first node matched by the query\n\n  // const puzzle = data.allMarkdownRemark.edges[0].node.frontmatter\n  // const rawMarkdown = data.allMarkdownRemark.edges[0].node.body;\n  // const html = puzzleNode.html; // HTML content\n  // const puzzle = puzzleNode.frontmatter; // Metadata\n  const puzzle = data.markdownRemark.frontmatter\n  const rawMarkdownBody = data.markdownRemark.html\n\n  const { question, hint, answer, solution } = splitContent(rawMarkdownBody);\n\n\n  const { previousPuzzleRoute, nextPuzzleRoute, category, difficulty } = pageContext\n\n  useEffect(() => {\n    document.querySelectorAll('.push').forEach(button => {\n      button.addEventListener('click', function () {\n        const content = document.getElementById(this.id.replace('Button', ''))\n        if (content) {\n          const isHidden = content.classList.contains('hidden')\n          content.classList.toggle('hidden', !isHidden)\n          content.classList.toggle('unhidden', isHidden)\n          this.classList.toggle('pushed', isHidden)\n          this.classList.toggle('push', !isHidden)\n        }\n      })\n    })\n\n  }, [])\n\n\n\n\n  return (\n    <Layout>\n      <Helmet>\n        <link rel=\"icon\" href=\"/favicon.gif\" />\n        <title>{puzzle.title} | Brainstellar Puzzles</title>\n      </Helmet>\n      <div className=\"stylishpage\"><div className=\"bord1\"><div className=\"bord2\"><div className=\"container\">\n        {category && <h2 style={{ textAlign: `center`, marginTop: `1.5em`, marginBottom: `1em` }}>{category} puzzles</h2>}\n\n        {difficulty && <h2 style={{ textAlign: `center`, marginTop: `1.5em`, marginBottom: `1em` }}>{difficulty} puzzles</h2>}\n\n\n        <br /><br />\n\n        <table style={{ border: '0px solid black', width: '100%', padding: '0px', margin: '0px' }}>\n          <tbody>\n            <tr style={{ padding: '0px', margin: '0px' }}>\n              <td style={{ padding: '0px', margin: '0px', border: '0px solid black', width: '20%', text: '' }}>\n                <Link className={`btn  btn-sm btn-${puzzle.difficulty} smooth`} to={`/puzzles/${puzzle.difficulty}`} title={`More ${puzzle.difficulty} puzzles`}>{puzzle.difficulty}</Link>\n              </td>\n              <td style={{ padding: '0px', margin: '0px' }}>\n                <div className=\"content-text\" style={{ padding: '0px', margin: '0px', textAlign: 'center', fontSize: '1.3em' }}>\n                  <a href={`/puzzles/${puzzle.puzzleId}`} title=\"Permanent link to this post\">\n                    {puzzle.title}\n                  </a>\n                </div>\n              </td>\n              <td style={{ padding: '0px', margin: '0px', border: '0px solid black', width: '20%', maxWidth: '80px', textAlign: 'right' }}>\n                <Link className={`btn  btn-sm link-white smooth`} to={`/puzzles/${puzzle.category}`} title={`More ${puzzle.category} puzzles`}>{puzzle.category}</Link>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        {/* <MDXRenderer>{puzzleNode.body}</MDXRenderer> */}\n        {/* <div dangerouslySetInnerHTML={{ __html: rawMarkdownBody }} /> */}\n\n        {question && <div className=\"content-text\" style={{ marginTop: `1em`, marginBottom: `1em` }}>\n          {/* <ComponentToDisplayMarkdown markdown={rawMarkdownBody} /> */}\n          <div dangerouslySetInnerHTML={{ __html: question }} />\n        </div>}\n\n        {puzzle.questionImage && <img src={`/puzzle-images/${puzzle.questionImage}`} style={{ width: `200px`, height: 'auto', display: 'block', 'marginLeft': 'auto', 'marginRight': 'auto' }} alt={`QuestionImage ${puzzle.puzzleId}`} />}\n\n        {hint &&\n          <Button id={`hint${puzzle.puzzleId}`} label=\"Hint\" content={\n            <div dangerouslySetInnerHTML={{ __html: hint }} />\n          }\n            passClass=\"one-liner\"\n          />\n        }\n\n        {answer &&\n          <Button id={`answer${puzzle.puzzleId}`} label=\"Answer\" content={\n            <div passClass=\"one-liner\" dangerouslySetInnerHTML={{ __html: answer }} />\n          }\n            passClass=\"one-liner\"\n          />\n        }\n\n        {solution &&\n          <Button id={`solution${puzzle.puzzleId}`} label=\"Solution\" content={\n            <>\n              {/* <ComponentToDisplayMarkdown markdown={puzzle.solution} />\n              {puzzle.solutionImage &&\n                <img src={`/puzzle-images/${puzzle.solutionImage}`} style={{ width: `200px`, height: 'auto', display: 'block', 'marginLeft': 'auto', 'marginRight': 'auto' }} alt={`SolutionImage ${puzzle.puzzleId}`} />\n              } */}\n              <div class=\"solution\" dangerouslySetInnerHTML={{ __html: solution }} />\n            </>\n          } />\n        }\n\n        <FacebookComments puzzleId={puzzle.puzzleId} />\n\n\n        <br />\n        <div style={{ marginBottom: `50px` }}>\n          <table style={{ width: `100%`, tableLayout: `fixed` }}>\n            <tbody>\n              <tr>\n                <td>\n\n                  {/* TODO: fix this margin */}\n                  {previousPuzzleRoute && (\n                    <Link style={{ float: `left` }} to={previousPuzzleRoute} className={\"btn  btn-sm link-white smooth\"}>Previous</Link>\n                  )}\n                </td>\n\n                {/* like button here */}\n                <td>\n\n                  {nextPuzzleRoute && (\n                    <Link style={{ float: `right` }} to={nextPuzzleRoute} className={\"btn  btn-sm link-white smooth\"}>Next Puzzle</Link>\n                  )}\n                </td>\n\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <br /><br />\n      </div></div></div></div>\n    </Layout>\n  )\n}\n"],"names":["_ref","id","label","content","backgroundColor","onToggle","passClass","isHidden","setIsHidden","useState","React","style","display","className","onClick","toggleContent","puzzleId","loadComments","setLoadComments","useEffect","d","s","js","fjs","window","FB","XFBML","parse","fbAsyncInit","init","appId","cookie","xfbml","version","document","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","Button","URL","splitContent","htmlContent","parts","split","question","hint","answer","solution","i","length","section","trim","undefined","Puzzle","data","pageContext","puzzle","markdownRemark","frontmatter","rawMarkdownBody","html","previousPuzzleRoute","nextPuzzleRoute","category","difficulty","querySelectorAll","forEach","button","addEventListener","this","replace","classList","contains","toggle","Layout","Helmet","rel","href","title","textAlign","marginTop","marginBottom","border","width","padding","margin","text","Link","to","fontSize","maxWidth","dangerouslySetInnerHTML","__html","questionImage","height","alt","class","FacebookComments","tableLayout","float"],"sourceRoot":""}