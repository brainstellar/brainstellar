{"componentChunkName":"component---src-templates-puzzle-js","path":"/puzzles/probability/213","result":{"data":{"markdownRemark":{"html":"<h2>Question</h2>\n<p>On pressing a button, a random number is generated uniformly between 0 &#x26; 1. You keep on generating these numbers until their sum exceeds 1. What is the probability that you need to press the button more than n times? What is the expected number of times you need to press the button?</p>\n<h2>Hint</h2>\n<p>Probability by conditioning</p>\n<h2>Answer</h2>\n<p>Probability: 1/n! ; Expected times:  e</p>\n<h2>Solution</h2>\n<p>Probability of more than n throws is equivalent to saying X1+..+Xn &#x3C;=1, this is the volume of n dimensional symplex from origin, its volume is 1/n! and can be proved by induction. This can be used to calculate expected number of button presses, sum( 1/n! * n ) = sum( 1/(n-1)!) = e^1</p>\n<p>Otherwise, set up a (lag)differential equation for f(x), the expected number of draws needed for the sum to exceed x. For x=0,f(x)=1. For x>0, suppose a draw gave number t, then f(x)= 1 + integral (t=0 to x)f(x-t)dt, which is same as f(x) = 1 + integral(t=0 to x) f(t)dt, differentiate wrt x, we get f'(x) = 0 + f'(x). This has the solution f(x)=e^x and x=1 gives e.\nTo take derivative, we used  leibniz integral rule:\nd/dx  ( integral( a(x) to b(x) ) f(t) dt = f(b(x)) * b'(x) - f(a(x)) * a'(x) = f(x) * 1 - f(x) * 0 = f(x)</p>","frontmatter":{"puzzleId":213,"difficulty":"hard","category":"probability","title":"Sum To One"}}},"pageContext":{"puzzleId":213,"previousPuzzleRoute":"/puzzles/probability/211","nextPuzzleRoute":"/puzzles/probability/215","category":"probability"}},"staticQueryHashes":["3649515864","764694655"],"slicesMap":{}}